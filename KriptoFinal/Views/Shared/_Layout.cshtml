<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>@ViewData["Title"] - KriptoFinal</title>

    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/KriptoFinal.styles.css" asp-append-version="true" />
    <link href="https://fonts.googleapis.com/css2?family=Orbitron&display=swap" rel="stylesheet" />

    <style>
        html, body {
            margin: 0;
            padding: 0;
            height: 100%;
            background-color: red;
            color: #ffcccc;
            font-family: 'Orbitron', sans-serif;
            overflow-x: hidden;
        }

        /* Matrix Canvas */
        #matrix-canvas {
            position: fixed;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            background: red;
            z-index: 0;
            pointer-events: none;
        }

        /* Navbar ve içerik görünür olmalı */
        .navbar, .container, .footer {
            position: relative;
            z-index: 1;
        }

        .navbar {
            background: rgba(0, 0, 0, 0.4);
            border-bottom: 1px solid #ff000055;
        }

        .navbar-brand, .nav-link {
            color: #ff0000 !important;
            text-shadow: 0 0 8px #ff0000;
            font-weight: bold;
        }

            .navbar-brand:hover, .nav-link:hover {
                color: white !important;
                text-shadow: 0 0 12px #ff0000;
            }

        .container {
            background: rgba(0, 0, 0, 0.4);
            border-radius: 10px;
            padding: 25px;
            margin-top: 30px;
            box-shadow: 0 0 20px #ff000033;
        }

        .footer {
            text-align: center;
            padding: 15px;
            font-size: 0.9rem;
            color: #ffcccc;
            background: rgba(0, 0, 0, 0.3);
            border-top: 1px solid #ff000022;
            margin-top: 30px;
        }

            .footer a {
                color: #ff0000;
                text-shadow: 0 0 5px #ff0000;
            }

                .footer a:hover {
                    color: #ffffff;
                    text-shadow: 0 0 10px #ff0000;
                }
    </style>
</head>
<body>

    <!-- Matrix Efekti -->
    <canvas id="matrix-canvas"></canvas>

    <!-- Navbar -->
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm px-4">
            <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">💀 KriptoFinal</a>
        </nav>
    </header>

    <!-- Sayfa içeriği -->
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <!-- Scripts -->
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <!-- Matrix Animasyon -->
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const canvas = document.getElementById('matrix-canvas');
            const ctx = canvas.getContext('2d');

            canvas.width = window.innerWidth;
            canvas.height = window.innerHeight;

            const chars = "01アイウエオカキクケコサシスセソABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
            const charArray = chars.split('');
            const fontSize = 20;
            const columns = Math.floor(canvas.width / fontSize);
            const drops = Array(columns).fill(1);

            function draw() {
                ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';
                ctx.fillRect(0, 0, canvas.width, canvas.height);

                ctx.fillStyle = '#ff0000';
                ctx.font = fontSize + 'px monospace';

                for (let i = 0; i < drops.length; i++) {
                    const text = charArray[Math.floor(Math.random() * charArray.length)];
                    ctx.fillText(text, i * fontSize, drops[i] * fontSize);

                    if (drops[i] * fontSize > canvas.height && Math.random() > 0.975) {
                        drops[i] = 0;
                    }

                    drops[i]++;
                }

                requestAnimationFrame(draw);
            }

            window.addEventListener('resize', () => {
                canvas.width = window.innerWidth;
                canvas.height = window.innerHeight;
            });

            draw();
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
